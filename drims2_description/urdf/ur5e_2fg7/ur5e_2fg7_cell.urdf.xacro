<?xml version='1.0' encoding='utf-8'?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="platform">

   <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
   <xacro:arg name="ur_type" default="ur5e"/>
   <xacro:arg name="name" default="ur5e"/>
   <xacro:arg name="robot_ip" default="0.0.0.0" />

   <xacro:arg name="tf_prefix" default="" />
   <xacro:arg name="joint_limit_params" default="$(find drims2_description)/config/$(arg ur_type)/joint_limits.yaml"/>
   <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
   <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
   <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
   <xacro:arg name="transmission_hw_interface" default=""/>
   <xacro:arg name="safety_limits" default="false"/>
   <xacro:arg name="safety_pos_margin" default="0.15"/>
   <xacro:arg name="safety_k_position" default="20"/>
   <xacro:arg name="headless_mode" default="false" />
   <xacro:arg name="script_filename" default="$(find ur_client_library)/resources/external_control.urscript"/>
   <xacro:arg name="input_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"/>
   <xacro:arg name="output_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"/>
   <xacro:arg name="reverse_ip" default="0.0.0.0"/>
   <xacro:arg name="script_command_port" default="50004"/>
   <xacro:arg name="reverse_port" default="50001"/>
   <xacro:arg name="script_sender_port" default="50002"/>
   <xacro:arg name="trajectory_port" default="50003"/>
   <xacro:arg name="use_tool_communication" default="true" />
   <xacro:arg name="tool_voltage" default="24" />
   <xacro:arg name="tool_parity" default="0" />
   <xacro:arg name="tool_baud_rate" default="115200" />
   <xacro:arg name="tool_stop_bits" default="1" />
   <xacro:arg name="tool_rx_idle_chars" default="1.5" />
   <xacro:arg name="tool_tx_idle_chars" default="3.5" />
   <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
   <xacro:arg name="tool_tcp_port" default="54321" />

   <xacro:arg name="use_fake_hardware" default="true" />
   <xacro:arg name="fake_sensor_commands" default="false" />
   <xacro:arg name="sim_gazebo" default="false" />
   <xacro:arg name="sim_ignition" default="false" />
   <xacro:arg name="simulation_controllers" default="" />

   <xacro:arg name="initial_positions_file" default="$(find drims2_description)/urdf/$(arg ur_type)/initial_positions.yaml"/>

   <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

   <link name="world"/>

   <!-- TABLE PROPERTIES -->
   <xacro:property name="table_length" value="1.2"/>
   <xacro:property name="table_width" value="0.7"/>
   <xacro:property name="table_height" value="0.75"/>
   <xacro:property name="table_thickness" value="0.063"/>
   <xacro:property name="leg_width" value="0.05"/>

   <!-- TABLE DEFINITION -->
   <link name="table_top">
      <visual>
         <geometry>
            <box size="${table_length} ${table_width} ${table_thickness}"/>
         </geometry>
         <origin xyz="0 0 -${table_thickness/2}" rpy="0 0 0"/>
         <material name="white">
            <color rgba="1 1 1 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
            <box size="${table_length} ${table_width} ${table_thickness}"/>
         </geometry>
         <origin xyz="0 0 -${table_thickness/2}" rpy="0 0 0"/>
         <material name="brown">
            <color rgba="0.4 0.2 0 1"/>
         </material>
      </collision>
   </link>

   <!-- Table rotated 90 degrees (1.5708 radians) around Z-axis -->
   <joint name="world_to_table" type="fixed">
      <parent link="world"/>
      <child link="table_top"/>
      <origin xyz="0 0 ${table_height}" rpy="0 0 1.5708"/>
   </joint>

   <xacro:macro name="table_leg" params="name x y z">
      <link name="${name}">
         <visual>
            <geometry>
               <box size="${leg_width} ${leg_width} ${z}"/>
            </geometry>
            <origin xyz="0 0 ${z / 2}" rpy="0 0 0"/>
            <material name="gray">
               <color rgba="0.53 0.53 0.53 1"/>
            </material>
         </visual>
         <collision>
            <geometry>
               <box size="${leg_width} ${leg_width} ${z}"/>
            </geometry>
            <origin xyz="0 0 ${z / 2}" rpy="0 0 0"/>
            <material name="black">
               <color rgba="0.1 0.1 0.1 1"/>
            </material>
      </collision>
      </link>
      <joint name="joint_${name}" type="fixed">
         <parent link="world"/>
         <child link="${name}"/>
         <!-- Leg positions also rotated 90 degrees -->
         <origin xyz="${-y} ${x} 0" rpy="0 0 1.5708"/>
         </joint>
   </xacro:macro>

   <xacro:table_leg name="leg_1" x="${table_length / 2 - leg_width / 2}" y="${table_width / 2 - leg_width / 2}" z="${table_height - table_thickness}"/>
   <xacro:table_leg name="leg_2" x="${-table_length / 2 + leg_width / 2}" y="${table_width / 2 - leg_width / 2}" z="${table_height - table_thickness}"/>
   <xacro:table_leg name="leg_3" x="${table_length / 2 - leg_width / 2}" y="${-table_width / 2 + leg_width / 2}" z="${table_height - table_thickness}"/>
   <xacro:table_leg name="leg_4" x="${-table_length / 2 + leg_width / 2}" y="${-table_width / 2 + leg_width / 2}" z="${table_height - table_thickness}"/>

   <xacro:macro name="safety_barrier" params="name xyz size">
   <link name="${name}">
      <visual>
         <geometry>
         <box size="${size}"/>
         </geometry>
         <origin xyz="${xyz}" rpy="0 0 0"/>
         <material name="red_transparent">
         <color rgba="1.0 1.0 0.5 0.3"/>
         </material>
      </visual>
      <collision>
         <geometry>
         <box size="${size}"/>
         </geometry>
         <origin xyz="${xyz}" rpy="0 0 0"/>
      </collision>
   </link>
   <joint name="joint_${name}" type="fixed">
      <parent link="table_top"/>
      <child link="${name}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
   </joint>
   </xacro:macro>

   <!-- Safety barriers positions adjusted for 90-degree rotation -->
   <xacro:safety_barrier name="barrier_back"
   xyz="${-table_width/2 - 0.3} 0 0.3"
   size="0.01 ${table_length} 0.8"/>

   <xacro:safety_barrier name="barrier_left"
   xyz="0 ${-table_length/2 - 0.3} 0.3"
   size="${table_width} 0.01 0.8"/>

   <xacro:safety_barrier name="barrier_right"
   xyz="0 ${table_length/2 + 0.3} 0.3"
   size="${table_width} 0.01 0.8"/>

   <xacro:safety_barrier name="barrier_top"
   xyz="0 0 1.2"
   size="${table_width} ${table_length} 0.01"/>

   <!-- CONVEYOR BELT PROPERTIES -->
   <xacro:property name="conveyor_length" value="1.5"/>
   <xacro:property name="conveyor_width" value="0.4"/>
   <xacro:property name="conveyor_height" value="0.85"/>
   <xacro:property name="conveyor_thickness" value="0.02"/>
   <xacro:property name="conveyor_leg_width" value="0.04"/>

   <!-- CONVEYOR BELT DEFINITION -->
   <!-- Conveyor belt surface -->
   <link name="conveyor_belt">
      <visual>
         <geometry>
            <box size="${conveyor_length} ${conveyor_width} ${conveyor_thickness}"/>
         </geometry>
         <origin xyz="0 0 -${conveyor_thickness/2}" rpy="0 0 0"/>
         <material name="dark_green_rubber">
            <color rgba="0 0.43 0 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
            <box size="${conveyor_length} ${conveyor_width} ${conveyor_thickness}"/>
         </geometry>
         <origin xyz="0 0 -${conveyor_thickness/2}" rpy="0 0 0"/>
      </collision>
   </link>

   <!-- Conveyor frame -->
   <link name="conveyor_frame">
      <visual>
         <geometry>
            <box size="${conveyor_length} ${conveyor_width + 0.1} 0.05"/>
         </geometry>
         <origin xyz="0 0 -0.025" rpy="0 0 0"/>
         <material name="aluminum">
            <color rgba="0.8 0.8 0.8 1"/>
         </material>
      </visual>
      <collision>
         <geometry>
            <box size="${conveyor_length} ${conveyor_width + 0.1} 0.05"/>
         </geometry>
         <origin xyz="0 0 -0.025" rpy="0 0 0"/>
      </collision>
   </link>

   <!-- Joint connecting conveyor belt to frame -->
   <joint name="conveyor_belt_to_frame" type="fixed">
      <parent link="conveyor_frame"/>
      <child link="conveyor_belt"/>
      <origin xyz="0 0 ${conveyor_thickness/2 + 0.025}" rpy="0 0 0"/>
   </joint>

   <!-- Conveyor positioned in FRONT of the table and rotated 90 degrees -->
   <joint name="world_to_conveyor" type="fixed">
      <parent link="world"/>
      <child link="conveyor_frame"/>
      <origin xyz="${table_width/2 + conveyor_width/2 + 0.05} 0 ${conveyor_height}" rpy="0 0 1.5708"/>
   </joint>

   <!-- Conveyor legs -->
   <xacro:macro name="conveyor_leg" params="name x y z">
      <link name="${name}">
         <visual>
            <geometry>
               <box size="${conveyor_leg_width} ${conveyor_leg_width} ${z}"/>
            </geometry>
            <origin xyz="0 0 ${z / 2}" rpy="0 0 0"/>
            <material name="steel">
               <color rgba="0.5 0.5 0.5 1"/>
            </material>
         </visual>
         <collision>
            <geometry>
               <box size="${conveyor_leg_width} ${conveyor_leg_width} ${z}"/>
            </geometry>
            <origin xyz="0 0 ${z / 2}" rpy="0 0 0"/>
         </collision>
      </link>
      <joint name="joint_${name}" type="fixed">
         <parent link="world"/>
         <child link="${name}"/>
         <!-- Conveyor leg positions also rotated 90 degrees -->
         <origin xyz="${-y} ${x} 0" rpy="0 0 1.5708"/>
      </joint>
   </xacro:macro>

   <!-- FIXED: Conveyor legs positioned at the correct corners for rotated conveyor -->
   <!-- Since conveyor is rotated 90 degrees, we need to swap length/width in positioning -->
   <xacro:conveyor_leg name="conveyor_leg_1" x="${-conveyor_length / 2 + conveyor_leg_width / 2}" y="${-(table_width/2 + conveyor_width/2 + 0.05 + conveyor_width / 2 - conveyor_leg_width / 2)}" z="${conveyor_height}"/>
   <xacro:conveyor_leg name="conveyor_leg_2" x="${-conveyor_length / 2 + conveyor_leg_width / 2}" y="${-(table_width/2 + conveyor_width/2 + 0.05 - conveyor_width / 2 + conveyor_leg_width / 2)}" z="${conveyor_height}"/>
   <xacro:conveyor_leg name="conveyor_leg_3" x="${conveyor_length / 2 - conveyor_leg_width / 2}" y="${-(table_width/2 + conveyor_width/2 + 0.05 + conveyor_width / 2 - conveyor_leg_width / 2)}" z="${conveyor_height}"/>
   <xacro:conveyor_leg name="conveyor_leg_4" x="${conveyor_length / 2 - conveyor_leg_width / 2}" y="${-(table_width/2 + conveyor_width/2 + 0.05 - conveyor_width / 2 + conveyor_leg_width / 2)}" z="${conveyor_height}"/>

   <!-- Optional: Conveyor end rollers -->
   <!-- <xacro:macro name="conveyor_roller" params="name x_offset">
      <link name="${name}">
         <visual>
            <geometry>
               <cylinder length="${conveyor_width}" radius="0.05"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 1.5708 0"/>
            <material name="rubber">
               <color rgba="0.3 0.3 0.3 1"/>
            </material>
         </visual>
         <collision>
            <geometry>
               <cylinder length="${conveyor_width}" radius="0.05"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 1.5708 0"/>
         </collision>
      </link>
      <joint name="joint_${name}" type="fixed">
         <parent link="conveyor_frame"/>
         <child link="${name}"/>
         <origin xyz="${x_offset} 0 0.025" rpy="0 0 0"/>
      </joint>
   </xacro:macro>

   <xacro:conveyor_roller name="conveyor_roller_front" x_offset="${conveyor_length/2 - 0.05}"/>
   <xacro:conveyor_roller name="conveyor_roller_back" x_offset="${-conveyor_length/2 + 0.05}"/> -->

   <!-- MAIN ROBOT - This includes the complete UR5e robot -->
   <xacro:ur_robot
      name="$(arg name)"
      tf_prefix="$(arg tf_prefix)"
      parent="table_top"
      joint_limits_parameters_file="$(arg joint_limit_params)"
      kinematics_parameters_file="$(arg kinematics_params)"
      physical_parameters_file="$(arg physical_params)"
      visual_parameters_file="$(arg visual_params)"
      transmission_hw_interface="$(arg transmission_hw_interface)"
      safety_limits="$(arg safety_limits)"
      safety_pos_margin="$(arg safety_pos_margin)"
      safety_k_position="$(arg safety_k_position)"
      use_fake_hardware="$(arg use_fake_hardware)"
      fake_sensor_commands="$(arg fake_sensor_commands)"
      sim_gazebo="$(arg sim_gazebo)"
      sim_ignition="$(arg sim_ignition)"
      headless_mode="$(arg headless_mode)"
      initial_positions="${xacro.load_yaml(initial_positions_file)}"
      use_tool_communication="$(arg use_tool_communication)"
      tool_voltage="$(arg tool_voltage)"
      tool_parity="$(arg tool_parity)"
      tool_baud_rate="$(arg tool_baud_rate)"
      tool_stop_bits="$(arg tool_stop_bits)"
      tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
      tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
      tool_device_name="$(arg tool_device_name)"
      tool_tcp_port="$(arg tool_tcp_port)"
      robot_ip="$(arg robot_ip)"
      script_filename="$(arg script_filename)"
      output_recipe_filename="$(arg output_recipe_filename)"
      input_recipe_filename="$(arg input_recipe_filename)"
      reverse_ip="$(arg reverse_ip)"
      script_command_port="$(arg script_command_port)"
      reverse_port="$(arg reverse_port)"
      script_sender_port="$(arg script_sender_port)"
      trajectory_port="$(arg trajectory_port)"
      >
      <!-- Robot origin adjusted for the rotated table -->
      <origin xyz="0.125 ${-table_width/2.0 + 0.225} 0" rpy="0 0 0"/>
   </xacro:ur_robot>

   <!-- GRIPPER ATTACHMENT -->
   <xacro:include filename="$(find onrobot_2fg7_gripper_description)/urdf/onrobot_2fg7.xacro" />
   
   <!-- Add gripper to the robot -->
   <xacro:onrobot_2fg7_gripper
      parent="tool0"
      prefix="2fg7_"
   />

   <!-- Include transmission AFTER gripper is defined -->
   <xacro:include filename="$(find onrobot_2fg7_gripper_description)/urdf/onrobot_2fg7.trans.xacro" />
   <xacro:gripper_transmission/>

   <!-- End effector tip for MoveIt -->
   <link name="tip"/>
   <joint name="tool0_to_tip" type="fixed">
      <parent link="tool0"/>
      <child link="tip"/>
      <origin xyz="0 0 0.15" rpy="0 0 0"/>
   </joint>

   <!-- ROS2 Control for gripper ONLY (UR robot has its own control in the macro) -->
   <ros2_control name="onrobot_2fg7_gripper" type="system">
      <hardware>
         <plugin>mock_components/GenericSystem</plugin>
         <param name="fake_sensor_commands">$(arg fake_sensor_commands)</param>
         <!-- FIX: Force initial positions for gripper joints -->
         <!-- FIX: Correct initial positions for gripper joints -->
         <param name="state_initial_values">
            left_finger_joint/position: 0.010  # Start at mid-position (55mm opening)
            left_finger_joint/velocity: 0.0
            right_finger_joint/position: -0.010  # Mirror of left finger
            right_finger_joint/velocity: 0.0
         </param>
      </hardware>
      <joint name="left_finger_joint">
         <command_interface name="position"/>
         <state_interface name="position"/>
         <state_interface name="velocity"/>
      </joint>
      <joint name="right_finger_joint">
         <command_interface name="position"/>
         <state_interface name="position"/>
         <state_interface name="velocity"/>
      </joint>
   </ros2_control>
</robot>